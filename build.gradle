plugins {
    id 'java'
    id "org.jetbrains.kotlin.jvm" version "1.6.10"
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

group 'idk.bluecross'
version '1.1'

repositories {
    mavenCentral()
    maven {
        url "https://repo1.maven.org/maven2/"
    }
    jcenter()
}

ext {
    junitVersion = '5.8.2'
}

sourceCompatibility = '11'
targetCompatibility = '11'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
//    mainModule = 'idk.bluecross.fhooker'
    mainClass = 'idk.bluecross.fhooker.ShitcodeMoment'
}

javafx {
    version = '11'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.web', 'javafx.media']
}

dependencies {          // idk is we need all this dependencies but it was autogenerated by IntellIJ
//    implementation('org.controlsfx:controlsfx:11.1.1')
//    implementation('com.dlsc.formsfx:formsfx-core:11.5.0') {
//        exclude(group: 'org.openjfx')
//    }
//    implementation('net.synedra:validatorfx:0.3.1') {
//        exclude(group: 'org.openjfx')
//    }
//    implementation('org.kordamp.ikonli:ikonli-javafx:12.3.1')
//    implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')
//    implementation('com.github.almasb:fxgl:11.17') {
//        exclude(group: 'org.openjfx')
//    }
    implementation 'org.openjfx:javafx:11'
//    implementation 'org.apache.spark:spark-core_2.13:3.3.0'
//    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
//    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "11"
    }
}

jlinkZip {
    group = 'distribution'
}

shadowJar {         // can someone explain me how to work with this shit?
    manifest {
        attributes(
                'Main-Class': 'idk.bluecross.fhooker.ShitcodeMoment'
        )
    }
    exclude 'dummyThing'    // wtf
    classifier = 'release'
}